<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="policy-test-suite.xml" />
	<global-property doc:name="Global Property" doc:id="77d2ad51-bbec-41af-a30a-08a77361e5bc" name="env" value="qa" />
	<munit:test name="policy-test-suite-create-policy-sub-flowTest" doc:id="97fc5329-0137-46b5-b904-3a3160b73628" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="write" doc:id="4f183379-2256-473b-90da-ba9b2d6fd737" processor="file:write">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Write" attributeName="doc:name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="04649c6b-b028-454a-9ec0-0f1b96baa287" >
				<munit:payload value='{&#10;	"personalDetails": {&#10;	   "name": "Miki",&#10;	   "dateOfBirth": "1999-01-01",&#10;	   "address": "USA"&#10;	},&#10;	"trip": {&#10;	  "destination": "Ethiopia",&#10;	   "tripStartDate": "2023-04-18",&#10;	   "tripEndDate": "2023-04-30"&#10;	},&#10;	"plan": {&#10;	   "planName": "gold",&#10;	   "premium": 300,&#10;	   "coverage": 25000&#10;	},&#10;	"purchaceDate": "2023-04-10"&#10;}' mediaType="application/json" />
				<munit:attributes value='{&#10;  "headers":&#10;    {&#10;       "username": "Tola"&#10;     }&#10;&#10;}' mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to create-policy-sub-flow" doc:id="9431074b-ef5f-4647-adfc-7583120dfb5c" name="create-policy-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="verify successfull message" doc:id="588ee6fe-dfb4-4efd-a1bd-873cf29c3f0b" actual="#[payload.message]" expected='#["policy created successfully"]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="policy-test-suite-get-policy-details-sub-flowTest" doc:id="4b820278-e22f-40a4-8514-4fe4879bb319" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="e5474e5d-c53a-4c5a-bb08-9e9134e228b7" processor="file:read">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Read" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[MunitTools::getResourceAsString('responses/getPolicyDetailesResponses.json')]&#10;" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="9ddbba82-80ed-4afd-be8b-ea295276e7b2" >
				<munit:attributes value='{&#10;  "uriParams":&#10;    {&#10;       "policyid": "123456"&#10;     }&#10;&#10;}&#10;  ' mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get-policy-details-sub-flow" doc:id="1ba85413-d9d4-4d3a-8553-402b048dde47" name="get-policy-details-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="d7180534-1f94-4966-88fb-3107d923411a" actual="#[payload.personalDetails.name]" expected='#["Tagel"]' message='persone name should be "Tagel"'/>
		</munit:validation>
	</munit:test>
	<munit:test name="policy-test-suite-get-policy-details-sub-negativeflowTest" doc:id="138bbb3b-af14-4f7b-897e-620745c6af23" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="50984ec6-f0c2-4f16-9113-33c4bd6dbbf9" processor="file:read">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Read" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="FILE:ILIEGAL_PATH" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="90958300-0b38-49c8-b558-76e982c8ef46" >
				<munit:payload value='{&#10;  "uriParams":&#10;    {&#10;       "policyid": "123456"&#10;     }&#10;&#10;}&#10;  ' mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="get-policy-details-sub-flow" doc:id="eec7b1d7-a99a-4b2d-8685-938d90cec739" name="get-policy-details-sub-flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="61994730-ac55-4836-9f5d-ac104b4b5d0f" actual="#[payload.status]" expected='#["failed"]' message="status should be failed"/>
		</munit:validation>
	</munit:test>


</mule>
